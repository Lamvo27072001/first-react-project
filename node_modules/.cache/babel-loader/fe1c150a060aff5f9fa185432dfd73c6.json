{"ast":null,"code":"import _slicedToArray from \"D:\\\\Users\\\\first-react-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Users\\\\first-react-project\\\\src\\\\Components\\\\Todo.jsx\";\nimport React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { AiFillCloseCircle } from 'react-icons/ai';\nimport { TiEdit } from 'react-icons/ti';\nimport { upload } from '@testing-library/user-event/dist/upload';\n\nfunction Todo(_ref) {\n  var _this = this;\n\n  var todos = _ref.todos,\n      completeTodo = _ref.completeTodo,\n      removeTodo = _ref.removeTodo,\n      updateTodo = _ref.updateTodo;\n\n  var _useState = useState({\n    id: null,\n    value: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      edit = _useState2[0],\n      setEdit = _useState2[1];\n\n  var submitUpdate = function submitUpdate(value) {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return /*#__PURE__*/React.createElement(TodoForm, {\n      edit: edit,\n      onSubmit: submitUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }\n    });\n  }\n\n  return todos.map(function (todo, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      key: todo.id,\n      onClick: function onClick() {\n        return completeTodo(todo.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, todo.text), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icons\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(AiFillCloseCircle, {\n      onClick: function onClick() {\n        return removeTodo(todo.id);\n      },\n      className: \"delete-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TiEdit, {\n      onClick: function onClick() {\n        return setEdit({\n          id: todo.id,\n          value: todo.text\n        });\n      },\n      className: \"edit-icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    })));\n  });\n}\n\nexport default Todo;","map":{"version":3,"names":["React","useState","TodoForm","AiFillCloseCircle","TiEdit","upload","Todo","todos","completeTodo","removeTodo","updateTodo","id","value","edit","setEdit","submitUpdate","map","todo","index","isComplete","text"],"sources":["D:/Users/first-react-project/src/Components/Todo.jsx"],"sourcesContent":["import React,{useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\n import {AiFillCloseCircle} from 'react-icons/ai'\r\n import {TiEdit} from 'react-icons/ti'\r\nimport { upload } from '@testing-library/user-event/dist/upload'\r\n\r\n\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n    \r\n    const submitUpdate = value => {\r\n      updateTodo(edit.id, value)\r\n      setEdit({\r\n        id: null,\r\n        value: ''\r\n      })\r\n    }\r\n\r\n    if(edit.id) {\r\n      return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n    }\r\n\r\n  return todos.map((todo,index) => (\r\n      <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n        <div key={todo.id} onClick={()=> completeTodo(todo.id)}>{todo.text}</div>\r\n        <div className='icons'>\r\n            <AiFillCloseCircle onClick={() => removeTodo(todo.id)} className='delete-icon'/>\r\n            <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} className='edit-icon'/>\r\n        </div>\r\n    </div>\r\n  ))\r\n    \r\n  \r\n}\r\n\r\nexport default Todo"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACC,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACD,SAASC,MAAT,QAAuB,yCAAvB;;AAIA,SAASC,IAAT,OAA6D;EAAA;;EAAA,IAA9CC,KAA8C,QAA9CA,KAA8C;EAAA,IAAvCC,YAAuC,QAAvCA,YAAuC;EAAA,IAAzBC,UAAyB,QAAzBA,UAAyB;EAAA,IAAbC,UAAa,QAAbA,UAAa;;EAAA,gBACjCT,QAAQ,CAAC;IAC7BU,EAAE,EAAE,IADyB;IAE7BC,KAAK,EAAE;EAFsB,CAAD,CADyB;EAAA;EAAA,IAClDC,IADkD;EAAA,IAC5CC,OAD4C;;EAMzD,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAH,KAAK,EAAI;IAC5BF,UAAU,CAACG,IAAI,CAACF,EAAN,EAAUC,KAAV,CAAV;IACAE,OAAO,CAAC;MACNH,EAAE,EAAE,IADE;MAENC,KAAK,EAAE;IAFD,CAAD,CAAP;EAID,CAND;;EAQA,IAAGC,IAAI,CAACF,EAAR,EAAY;IACV,oBAAO,oBAAC,QAAD;MAAU,IAAI,EAAEE,IAAhB;MAAsB,QAAQ,EAAEE,YAAhC;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAP;EACD;;EAEH,OAAOR,KAAK,CAACS,GAAN,CAAU,UAACC,IAAD,EAAMC,KAAN;IAAA,oBACb;MAAK,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAAxD;MAAoE,GAAG,EAAED,KAAzE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACE;MAAK,GAAG,EAAED,IAAI,CAACN,EAAf;MAAmB,OAAO,EAAE;QAAA,OAAKH,YAAY,CAACS,IAAI,CAACN,EAAN,CAAjB;MAAA,CAA5B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAyDM,IAAI,CAACG,IAA9D,CADF,eAEE;MAAK,SAAS,EAAC,OAAf;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,gBACI,oBAAC,iBAAD;MAAmB,OAAO,EAAE;QAAA,OAAMX,UAAU,CAACQ,IAAI,CAACN,EAAN,CAAhB;MAAA,CAA5B;MAAuD,SAAS,EAAC,aAAjE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EADJ,eAEI,oBAAC,MAAD;MAAQ,OAAO,EAAE;QAAA,OAAMG,OAAO,CAAC;UAACH,EAAE,EAAEM,IAAI,CAACN,EAAV;UAAcC,KAAK,EAAEK,IAAI,CAACG;QAA1B,CAAD,CAAb;MAAA,CAAjB;MAAiE,SAAS,EAAC,WAA3E;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAFJ,CAFF,CADa;EAAA,CAAV,CAAP;AAWD;;AAED,eAAed,IAAf"},"metadata":{},"sourceType":"module"}